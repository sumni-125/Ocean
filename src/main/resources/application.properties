spring.application.name=ocean

# ========================================
# Bean Configuration
# ========================================
spring.main.allow-bean-definition-overriding=true
spring.profiles.active=local
# ========================================
# MySQL DataSource Configuration
# ========================================
#spring.datasource.url=jdbc:mysql://ocean-mysql:3306/ocean_db?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.username=ocean_user
#spring.datasource.password=ocean_pass

# HikariCP  (Connection Pool)
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.auto-commit=true
server.forward-headers-strategy=native

# ========================================
# JPA Configuration
# ========================================
# production: validate, development: update
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.default_batch_fetch_size=100
spring.jpa.open-in-view=false

# ========================================
# MyBatis Configuration
# ========================================
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.type-aliases-package=com.example.ocean.domain
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30

# ========================================
# Thymeleaf
# ========================================
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

# ========================================
# JWT token Properties
# ========================================
app.jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970337336763979244226452948404D6351665468576D5A7134743777217A25432A
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000

app.frontend.url=https://ocean-app.click

# ========================================
# OAuth2 Configuration
# ========================================
# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Kakao OAuth2
spring.security.oauth2.client.registration.kakao.client-id=35d0df1bece52f575c0ffe385b2eb835
spring.security.oauth2.client.registration.kakao.client-secret=FDuE8tDXNo3sA9yWPwlRsqjFmNw0UX0P
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.client-name=Kakao

# Kakao Provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# ========================================
# Session Configuration
# ========================================
server.servlet.session.cookie.name=JSESSIONID
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=none
# server.servlet.session.cookie.domain=ocean-app.click
server.servlet.session.timeout=30m
server.servlet.session.tracking-modes=cookie

# ========================================
# NGINX Proxy Settings
# ========================================
server.use-forward-headers=true
server.tomcat.remote-ip-header=X-Forwarded-For
server.tomcat.protocol-header=X-Forwarded-Proto

# ========================================
# Error Handling
# ========================================
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on-param
server.error.include-exception=false
server.error.whitelabel.enabled=false

# ========================================
# Actuator (for health checks)
# ========================================
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# ========================================
# Logging
# ========================================
logging.level.root=INFO
logging.level.com.example.ocean=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.web=DEBUG

# OAuth2
logging.level.org.springframework.security.web.authentication=TRACE
logging.level.org.springframework.security.oauth2.client=TRACE

