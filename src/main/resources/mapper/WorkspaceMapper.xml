<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.ocean.mapper.WorkspaceMapper">

    <!-- 워크스페이스 생성 -->
    <insert id="insertWorkspace" parameterType="com.example.ocean.domain.Workspace">
        INSERT INTO WORKSPACE (
        WORKSPACE_CD, WORKSPACE_NM, WORKSPACE_IMG,
        INVITE_CD, ACTIVE_STATE, CREATED_DATE, END_DATE
        )
        VALUES (
        #{workspaceCd}, #{workspaceNm}, #{workspaceImg},
        #{inviteCd}, #{activeState}, #{createdDate}, #{endDate}
        )
    </insert>

    <!-- 초대코드로 워크스페이스 정보 조회 -->
    <select id="findWorkspaceByInviteCd" parameterType="string" resultType="com.example.ocean.domain.Workspace">
        SELECT WORKSPACE_CD, WORKSPACE_NM, WORKSPACE_IMG, INVITE_CD, ACTIVE_STATE, CREATED_DATE, END_DATE
        FROM WORKSPACE
        WHERE INVITE_CD = #{inviteCd}
    </select>

    <!-- 워크스페이스 멤버 등록 (기본 프로필 없이) -->
    <insert id="addUserToWorkspace">
        INSERT INTO WORKSPACE_MEMBERS (
        WORKSPACE_CD, USER_ID, USER_ROLE, ACTIVE_STATE, JOINED_DATE
        ) VALUES (
        #{workspaceCd}, #{userId}, #{userRole}, #{activeState}, NOW()
        )
    </insert>

    <!-- ⭐ 사용자 프로필 정보 삽입 (이미지 포함) -->
    <insert id="insertUserProfile">
        INSERT INTO WORKSPACE_MEMBERS (
        WORKSPACE_CD, USER_ID, USER_NICKNAME,
        STATUS_MSG, EMAIL, PHONE_NUM,
        USER_ROLE, USER_IMG, ACTIVE_STATE, JOINED_DATE
        ) VALUES (
        #{workspaceCd}, #{userId}, #{userNickname},
        #{statusMsg}, #{email}, #{phoneNum},
        #{userRole}, #{userImg}, 'Y', NOW()
        )
    </insert>

    <!-- ⭐ 워크스페이스 사용자 프로필 업데이트 (이미지 포함) -->
    <update id="updateWorkspaceProfile">
        UPDATE WORKSPACE_MEMBERS
        SET USER_NICKNAME = #{userNickname},
        STATUS_MSG = #{statusMsg},
        EMAIL = #{email},
        PHONE_NUM = #{phoneNum},
        USER_IMG = #{userImg}
        WHERE WORKSPACE_CD = #{workspaceCd}
        AND USER_ID = #{userId}
    </update>

    <!-- 사용자 프로필 이미지만 업데이트 -->
    <update id="updateProfileImageOnly">
        UPDATE WORKSPACE_MEMBERS
        SET USER_IMG = #{userImg}
        WHERE WORKSPACE_CD = #{workspaceCd}
        AND USER_ID = #{userId}
    </update>

    <!-- 부서 및 직급 정보 업데이트 -->
    <update id="updateDeptAndPosition">
        UPDATE WORKSPACE_MEMBERS
        SET DEPT_CD = #{deptCd},
        POSITION = #{position}
        WHERE WORKSPACE_CD = #{workspaceCd}
        AND USER_ID = #{userId}
    </update>


    <update id="updateDeptAndPosition2">
        UPDATE WORKSPACE_MEMBERS
        SET    POSITION = #{position}
        WHERE WORKSPACE_CD = #{workspaceCd}
        AND USER_ID = #{userId}
    </update>

    <!-- 초대코드 대소문자 무시하고 워크스페이스 조회 -->
    <select id="findByInviteCode" resultType="com.example.ocean.domain.Workspace">
        SELECT
        WORKSPACE_CD as workspaceCd,
        WORKSPACE_NM as workspaceNm,
        WORKSPACE_IMG as workspaceImg,
        INVITE_CD as inviteCd,
        ACTIVE_STATE as activeState,
        CREATED_DATE as createdDate,
        END_DATE as endDate
        FROM WORKSPACE
        WHERE LOWER(INVITE_CD) = LOWER(#{inviteCd})
    </select>

    <!-- 중복 초대 여부 확인 -->
    <select id="countInvitation" resultType="int">
        SELECT COUNT(*) FROM INVITATIONS
        WHERE WORKSPACE_CD = #{workspaceCd} AND INVITED_USER_ID = #{invitedUserId}
    </select>

    <!-- 초대 요청 삽입 -->
    <insert id="insertInvitation">
        INSERT INTO INVITATIONS (WORKSPACE_CD, INVITED_USER_ID, INVITE_CD, STATUS)
        VALUES (#{workspaceCd}, #{invitedUserId}, #{inviteCd}, NULL)
    </insert>

    <!-- 모든 워크스페이스의 대기 중 초대 목록 조회 -->
    <select id="getAllPendingInvitations" resultType="java.util.HashMap">
        SELECT i.WORKSPACE_CD,
        i.INVITED_USER_ID,
        u.USER_NM,
        u.USER_IMG,
        i.CREATED_DATE,
        w.WORKSPACE_NM
        FROM INVITATIONS i
        JOIN USERS u ON i.INVITED_USER_ID = u.USER_ID
        JOIN WORKSPACE w ON i.WORKSPACE_CD = w.WORKSPACE_CD
        WHERE i.STATUS IS NULL
    </select>

    <!-- 초대 수락 또는 거절 상태 업데이트 -->
    <update id="updateInvitationStatus">
        UPDATE INVITATIONS
        SET STATUS = #{status}
        WHERE WORKSPACE_CD = #{workspaceCd}
        AND INVITED_USER_ID = #{invitedUserId}
    </update>

    <!-- 워크스페이스 멤버 등록 (기본 정보 자동 포함)
    <insert id="insertWorkspaceMember">
        INSERT INTO WORKSPACE_MEMBERS (
        WORKSPACE_CD, USER_ID, USER_NICKNAME, USER_ROLE, STATUS_MSG,
        EMAIL, PHONE_NUM, ACTIVE_STATE, JOINED_DATE
        )
        VALUES (
        #{workspaceCd}, #{userId}, '', 'MEMBER', '',
        '', '', 'Y', NOW()
        )
    </insert>
    -->

    <!-- 워크스페이스 멤버 등록 (USERS 테이블의 기본 정보 활용) == USERS 테이블의 이름을 기본 닉네임으로 -->
    <insert id="insertWorkspaceMember">
        INSERT INTO WORKSPACE_MEMBERS (
        WORKSPACE_CD, USER_ID, USER_NICKNAME, USER_ROLE, STATUS_MSG,
        EMAIL, PHONE_NUM, USER_IMG, ACTIVE_STATE, JOINED_DATE
        )
        SELECT
        #{workspaceCd},
        #{userId},
        COALESCE(u.USER_NM, '새 멤버'),
        'MEMBER',
        '',
        '',
        '',
        u.USER_IMG,
        'Y',
        NOW()
        FROM USERS u
        WHERE u.USER_ID = #{userId}
    </insert>

    <!-- 초대 거절 처리 -->
    <update id="rejectInvitation">
        UPDATE INVITATIONS
        SET STATUS = 'REJECT'
        WHERE WORKSPACE_CD = #{workspaceCd}
        AND INVITED_USER_ID = #{invitedUserId}
    </update>

    <!-- 워크스페이스 코드로 워크스페이스 정보 조회 -->
    <select id="findWorkspaceByCd" resultType="com.example.ocean.domain.Workspace">
        SELECT
        WORKSPACE_CD   AS workspaceCd,
        WORKSPACE_NM   AS workspaceNm,
        WORKSPACE_IMG  AS workspaceImg,
        INVITE_CD      AS inviteCd,
        ACTIVE_STATE   AS activeState,
        CREATED_DATE   AS createdDate,
        END_DATE       AS endDate
        FROM WORKSPACE
        WHERE WORKSPACE_CD = #{workspaceCd}
    </select>

    <!-- 부서 정보 등록 -->
    <insert id="insertDepartment" parameterType="com.example.ocean.domain.WorkspaceDept">
        INSERT INTO WORKSPACE_DEPT (WORKSPACE_CD, DEPT_CD, DEPT_NM)
        VALUES (#{workspaceCd}, #{deptCd}, #{deptNm})
    </insert>

    <!-- 워크스페이스 멤버 추가 -->
    <insert id="insertMember" parameterType="com.example.ocean.domain.WorkspaceMember">
        INSERT INTO WORKSPACE_MEMBERS (
        WORKSPACE_CD, USER_ID, USER_ROLE, USER_NICKNAME, ACTIVE_STATE, JOINED_DATE
        ) VALUES (
        #{workspaceCd}, #{userId}, #{userRole}, '', 'Y', NOW()
        )
    </insert>

    <!-- 전체 부서 중 가장 큰 번호 조회 -->
    <select id="findGlobalMaxDeptNumber" resultType="java.lang.Integer">
        SELECT MAX(CAST(SUBSTRING(DEPT_CD, 2) AS UNSIGNED)) FROM WORKSPACE_DEPT
    </select>

    <!-- 워크스페이스에 속한 부서 목록 조회 -->
    <select id="selectDepartmentsByWorkspace" resultType="com.example.ocean.domain.WorkspaceDept">
        SELECT
        WORKSPACE_CD AS workspaceCd,
        DEPT_CD AS deptCd,
        DEPT_NM AS deptNm
        FROM WORKSPACE_DEPT
        WHERE WORKSPACE_CD = #{workspaceCd}
    </select>

    <!-- 찜하기 / 찜 해제 상태 업데이트 -->
    <update id="updateFavorite">
        UPDATE WORKSPACE_MEMBERS
        SET FAVORITE = #{favorite}
        WHERE USER_ID = #{userId}
        AND WORKSPACE_CD = #{workspaceCd}
    </update>

    <!-- 사용자 ID로 참여 중인 워크스페이스 목록 조회 -->
    <select id="findWorkspacesByUserId" resultType="com.example.ocean.domain.Workspace">
        SELECT
        w.WORKSPACE_CD   AS workspaceCd,
        w.WORKSPACE_NM   AS workspaceNm,
        w.WORKSPACE_IMG  AS workspaceImg,
        w.INVITE_CD      AS inviteCd,
        w.ACTIVE_STATE   AS activeState,
        w.CREATED_DATE   AS createdDate,
        w.END_DATE       AS endDate,
        CASE
        WHEN wm.FAVORITE = 'Y' THEN 1
        WHEN wm.FAVORITE = '1' THEN 1
        ELSE 0
        END AS favorite,
        wm.ENTRANCE_DATE AS entranceDate
        FROM WORKSPACE_MEMBERS wm
        JOIN WORKSPACE w ON wm.WORKSPACE_CD = w.WORKSPACE_CD
        WHERE wm.USER_ID = #{userId}
        ORDER BY favorite DESC, wm.ENTRANCE_DATE DESC
    </select>

    <!-- 워크스페이스 입장 시각 기록 -->
    <update id="updateEntranceTime">
        UPDATE WORKSPACE_MEMBERS
        SET ENTRANCE_DATE = #{timestamp}
        WHERE WORKSPACE_CD = #{workspaceCd} AND USER_ID = #{userId}
    </update>

    <!-- 워크스페이스 퇴장 시각 기록 -->
    <update id="updateQuitTime">
        UPDATE WORKSPACE_MEMBERS
        SET QUIT_DATE = #{timestamp}
        WHERE WORKSPACE_CD = #{workspaceCd} AND USER_ID = #{userId}
    </update>

    <!-- 특정 워크스페이스에 속한 전체 멤버 정보 조회 -->
    <select id="findMembersByWorkspaceCd" parameterType="string" resultType="com.example.ocean.domain.WorkspaceMember">
        SELECT
        wm.WORKSPACE_CD  AS workspaceCd,
        wm.USER_ID       AS userId,
        wm.USER_ROLE     AS userRole,
        wm.USER_NICKNAME AS userNickname,
        wm.STATUS_MSG    AS statusMsg,
        wm.USER_IMG      AS userImg,
        wm.USER_STATE    AS userState,
        wm.DEPT_CD       AS deptCd,
        d.DEPT_NM        AS deptNm,
        wm.POSITION      AS position,
        wm.EMAIL         AS email,
        wm.PHONE_NUM     AS phoneNum,
        wm.JOINED_DATE   AS joinedDate,
        wm.ACTIVE_STATE  AS activeState
        FROM WORKSPACE_MEMBERS wm
        LEFT JOIN WORKSPACE_DEPT d ON wm.DEPT_CD = d.DEPT_CD
        WHERE wm.WORKSPACE_CD = #{workspaceCd}
    </select>

    <!-- 특정 워크스페이스와 사용자에 대한 멤버 상세 정보 조회 -->
    <select id="findMemberByWorkspaceAndUser" parameterType="map" resultType="com.example.ocean.domain.WorkspaceMember">
        SELECT
        wm.WORKSPACE_CD  AS workspaceCd,
        wm.USER_ID       AS userId,
        wm.USER_NICKNAME AS userNickname,
        wm.STATUS_MSG    AS statusMsg,
        wm.USER_IMG      AS userImg,
        wm.DEPT_CD       AS deptCd,
        d.DEPT_NM        AS deptNm,
        wm.POSITION      AS position,
        wm.EMAIL         AS email,
        wm.PHONE_NUM     AS phoneNum,
        wm.JOINED_DATE   AS joinedDate,
        wm.USER_ROLE     AS userRole,
        ACTIVE_STATE     AS activeState
        FROM WORKSPACE_MEMBERS wm
        LEFT JOIN WORKSPACE_DEPT d ON wm.DEPT_CD = d.DEPT_CD
        WHERE wm.WORKSPACE_CD = #{workspaceCd}
        AND wm.USER_ID = #{userId}
    </select>




    <!-- 사용자 상태 업데이트 -->
    <update id="updateUserState" parameterType="map">
        UPDATE WORKSPACE_MEMBERS
        SET USER_STATE = #{userState}
        WHERE WORKSPACE_CD = #{workspaceCd} AND USER_ID = #{userId}
    </update>


    <!-- 사용자 상태 업데이트 (ACTIVE_STATE를 업데이트)
    <update id="updateUserState" parameterType="map">
        UPDATE WORKSPACE_MEMBERS
        SET ACTIVE_STATE = #{userState}
        WHERE WORKSPACE_CD = #{workspaceCd} AND USER_ID = #{userId}
    </update>
    -->


    <!-- 사용자 상태 가져오기 -->
    <select id="getUserStatus" resultType="string">
        SELECT USER_STATE
        FROM WORKSPACE_MEMBERS
        WHERE WORKSPACE_CD = #{workspaceCd}
        AND USER_ID = #{userId}
    </select>

    <select id="getEventSummaryByWorkspace" resultType="map">
        SELECT
        SUM(CASE WHEN PROGRESS_STATUS = 'TODO' THEN 1 ELSE 0 END) AS todoCount,
        SUM(CASE WHEN PROGRESS_STATUS = 'ING' THEN 1 ELSE 0 END) AS ingCount,
        SUM(CASE WHEN PROGRESS_STATUS = 'DONE' THEN 1 ELSE 0 END) AS doneCount,
        COUNT(*) AS totalCount
        FROM EVENTS
        WHERE WORKSPACE_CD = #{workspaceCd}
    </select>

    <insert id="insertNewMemberNotification">
        INSERT INTO MAIN_NOTIFICATION (
        NOTI_ID,
        WORKSPACE_CD,
        NOTI_STATE,
        CREATED_BY
        ) VALUES (
        #{notiId},
        #{workspaceCd},
        'NEW_ATTENDENCE',
        #{createdBy}
        )
    </insert>

    <select id="selectRecentNotifications" resultType="Notification">
        SELECT NOTI_STATE, CREATED_BY, CREATED_DATE
        FROM MAIN_NOTIFICATION
        WHERE WORKSPACE_CD = #{workspaceCd}
        ORDER BY CREATED_DATE DESC
        LIMIT 5
    </select>

    <!--워크스페이스 이름 찾기(메일보내기용)-->
    <select id="findWorkspaceNameByWorkspaceCd" parameterType="String" resultType="String">
        SELECT  WORKSPACE_NM
        FROM   `WORKSPACE`
        WHERE   WORKSPACE_CD = #{workspaceCd}
    </select>

    <select id="getPendingInvitationsByWorkspace" resultType="java.util.HashMap">
        SELECT i.WORKSPACE_CD,
        i.INVITED_USER_ID AS invitedUserId,
        u.USER_NM AS userName
        FROM INVITATIONS i
        JOIN USERS u ON i.INVITED_USER_ID = u.USER_ID
        WHERE i.STATUS IS NULL
        AND i.WORKSPACE_CD = #{workspaceCd}
    </select>

    <select id="findNicknameByWorkspaceAndUser" resultType="string">
        SELECT USER_NICKNAME
        FROM WORKSPACE_MEMBERS
        WHERE WORKSPACE_CD = #{workspaceCd}
        AND USER_ID = #{userId}
    </select>

    <select id="findUserNameByUserId" resultType="string">
        SELECT USER_NM
        FROM USERS
        WHERE USER_ID = #{userId}
    </select>


</mapper>
