<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.ocean.repository.PlaceRepository">

    <select id="findPlaceInfoByWorkspaceCd" resultType="com.example.ocean.dto.response.PlaceInfoResponse">
        SELECT
            p.PLACE_NM       AS placeNm,
            p.ADDRESS        AS address,
            p.LAT            AS lat,
            p.LNG            AS lng,
            p.PLACE_ID       AS placeId,
            e.EVENT_CD       AS eventCd,
            e.TITLE          AS title,
            e.DESCRIPTION    AS description,
            e.START_DATETIME AS startDatetime,
            e.END_DATETIME   AS endDatetime,
            wm.USER_NICKNAME AS createdBy,
            wm.USER_IMG      AS userImg
        FROM PLACE p
                 JOIN EVENTS e ON p.EVENT_CD = e.EVENT_CD
                 JOIN WORKSPACE_MEMBERS wm ON e.USER_ID = wm.USER_ID AND p.WORKSPACE_CD = wm.WORKSPACE_CD
        WHERE p.WORKSPACE_CD = #{workspaceCd}
          AND (e.IS_SHARED = '1' OR e.USER_ID = #{userId})
        ORDER BY e.START_DATETIME DESC
    </select>

    <insert id="insertEvent" parameterType="com.example.ocean.domain.Event">
        INSERT INTO EVENTS (
            EVENT_CD, WORKSPACE_CD, USER_ID, TITLE, DESCRIPTION,
            START_DATETIME, END_DATETIME, COLOR, IS_SHARED,
            PROGRESS_STATUS, PRIORITY, NOTIFY_TIME, CREATED_DATE
        ) VALUES (
                     #{eventCd},
                     #{workspaceCd},
                     #{userId},
                     #{title},
                     #{description},
                     #{startDatetime},
                     #{endDatetime},
                     #{color, jdbcType=VARCHAR},
                     #{isShared},
                     #{progressStatus, jdbcType=VARCHAR},
                     #{priority, jdbcType=VARCHAR},
                     #{notifyTime},
                     NOW()
                 )
    </insert>

    <update id="updateEvent" parameterType="com.example.ocean.domain.Event">
        UPDATE `EVENTS`
        <set>
            <if test="title          != null">   TITLE           = #{title},          </if>
            <if test="description    != null">   DESCRIPTION     = #{description},    </if>
            <if test="startDatetime  != null">   START_DATETIME  = #{startDatetime},  </if>
            <if test="endDatetime    != null">   END_DATETIME    = #{endDatetime},    </if>
            <if test="color          != null">   COLOR           = #{color},          </if>
            <if test="isShared       != null">   IS_SHARED       = #{isShared},       </if>
            <if test="progressStatus != null">   PROGRESS_STATUS = #{progressStatus}, </if>
            <if test="priority       != null">   PRIORITY        = #{priority},       </if>
            <if test="notifyTime     != null">   NOTIFY_TIME     = #{notifyTime},     </if>
        </set>
        WHERE   EVENT_CD = #{eventCd}
    </update>

    <insert id="insertPlace" parameterType="com.example.ocean.domain.Place">
        INSERT INTO PLACE (
            WORKSPACE_CD, EVENT_CD, PLACE_NM, PLACE_ID, ADDRESS, LAT, LNG, CREATED_AT
        ) VALUES (
                     #{workspace_cd}, #{event_cd}, #{place_nm}, #{place_id}, #{address}, #{lat}, #{lng}, NOW()
                 )
    </insert>

    <select id="findAll" resultType="com.example.ocean.domain.Place">
        SELECT
            p.PLACE_CD       AS place_cd,
            p.EVENT_CD       AS event_cd,
            p.WORKSPACE_CD   AS workspace_cd,
            p.PLACE_NM       AS place_nm,
            p.PLACE_ID       AS place_id,
            p.ADDRESS,
            p.LAT,
            p.LNG,
            wm.USER_NICKNAME AS created_by,
            p.CREATED_AT     AS created_at
        FROM PLACE p
                 LEFT JOIN EVENTS e ON p.EVENT_CD = e.EVENT_CD
                 LEFT JOIN WORKSPACE_MEMBERS wm ON e.USER_ID = wm.USER_ID AND p.WORKSPACE_CD = wm.WORKSPACE_CD
        ORDER BY p.CREATED_AT DESC
    </select>

    <select id="findByWorkspaceCd" resultType="com.example.ocean.domain.Place">
        SELECT
            p.PLACE_CD       AS place_cd,
            p.EVENT_CD       AS event_cd,
            p.WORKSPACE_CD   AS workspace_cd,
            p.PLACE_NM       AS place_nm,
            p.PLACE_ID       AS place_id,
            p.ADDRESS,
            p.LAT,
            p.LNG,
            wm.USER_NICKNAME AS created_by,
            p.CREATED_AT     AS created_at
        FROM PLACE p
                 LEFT JOIN EVENTS e ON p.EVENT_CD = e.EVENT_CD
                 LEFT JOIN WORKSPACE_MEMBERS wm ON e.USER_ID = wm.USER_ID AND p.WORKSPACE_CD = wm.WORKSPACE_CD
        WHERE p.WORKSPACE_CD = #{workspaceCd}
        ORDER BY p.CREATED_AT DESC
    </select>

    <select id="findEventByEventCd" resultType="com.example.ocean.domain.Event">
        SELECT
            e.EVENT_CD       AS eventCd,
            e.WORKSPACE_CD   AS workspaceCd,
            e.USER_ID        AS userId,
            e.TITLE          AS title,
            e.DESCRIPTION    AS description,
            e.START_DATETIME AS startDatetime,
            e.END_DATETIME   AS endDatetime,
            e.COLOR          AS color,
            e.IS_SHARED      AS isShared,
            e.PROGRESS_STATUS AS progressStatus,
            e.PRIORITY       AS priority,
            e.NOTIFY_TIME    AS notifyTime,
            e.CREATED_DATE   AS createdDate,
            wm.USER_NICKNAME AS userName
        FROM EVENTS e
                 LEFT JOIN WORKSPACE_MEMBERS wm ON e.USER_ID = wm.USER_ID AND e.WORKSPACE_CD = wm.WORKSPACE_CD
        WHERE e.EVENT_CD = #{eventCd}
    </select>

    <delete id="deletePlaceByEventCd" parameterType="String">
        DELETE
        FROM PLACE
        WHERE EVENT_CD = #{eventCd}
    </delete>

    <delete id="deleteEventByEventCd" parameterType="String">
        DELETE
        FROM EVENTS
        WHERE EVENT_CD = #{eventCd}
    </delete>

    <select id="checkPlaceExistsByEventCd" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM `PLACE`
        WHERE EVENT_CD = #{eventCd}
    </select>

    <update id="updatePlace" parameterType="com.example.ocean.domain.Place">
        UPDATE `PLACE`
        SET
            PLACE_NM = #{place_nm},
            ADDRESS = #{address},
            PLACE_ID = #{place_id},
            LAT = #{lat},
            LNG = #{lng}
        WHERE
            EVENT_CD = #{event_cd}
    </update>

</mapper>